diff --git a/arch/arm/boot/dts/imx6sx-sdb-btwifi.dts b/arch/arm/boot/dts/imx6sx-sdb-btwifi.dts
index ba5512e..1b1e66a 100644
--- a/arch/arm/boot/dts/imx6sx-sdb-btwifi.dts
+++ b/arch/arm/boot/dts/imx6sx-sdb-btwifi.dts
@@ -36,77 +36,8 @@
 	};
 };
 
-&iomuxc {
-	imx6sx-sdb-murata-v1_sdext {
-		pinctrl_bt: btgrp {
-			fsl,pins = <
-				MX6SX_PAD_SD2_DATA3__GPIO6_IO_11	0x13069 /* BT_REG_ON */
-			>;
-		};
-
-		pinctrl_uart3: uart3grp {
-			fsl,pins = <
-				MX6SX_PAD_SD3_DATA4__UART3_RX		0x1b0b1
-				MX6SX_PAD_SD3_DATA5__UART3_TX		0x1b0b1
-				MX6SX_PAD_SD3_DATA7__UART3_CTS_B	0x1b0b1
-				MX6SX_PAD_SD3_DATA6__UART3_RTS_B	0x1b0b1
-			>;
-		};
-
-		/* change MUXing on SD2 slot for control signals. */
-		pinctrl_usdhc2_1: usdhc2grp-1 {
-			fsl,pins = <
-				MX6SX_PAD_SD2_CMD__USDHC2_CMD		0x17059
-				MX6SX_PAD_SD2_CLK__USDHC2_CLK		0x10059
-				MX6SX_PAD_SD2_DATA0__USDHC2_DATA0	0x17059
-			>;
-		};
-
-		/* Murata change SD3 to 4-bit SDIO only; use upper 4-bits for UART. */
-		pinctrl_wifi: wifigrp {
-			fsl,pins = <
-				MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x17069
-				MX6SX_PAD_SD3_CLK__USDHC3_CLK		0x10071
-				MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x17069
-				MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x17069
-				MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x17069
-				MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x17069
-				MX6SX_PAD_KEY_COL0__GPIO2_IO_10		0x17059 /* CD */
-				MX6SX_PAD_KEY_ROW0__GPIO2_IO_15		0x17059 /* WP */
-				/* Murata Module control signals */
-				MX6SX_PAD_SD2_DATA1__GPIO6_IO_9         0x13069 /* WL_HOST_WAKE */
-				MX6SX_PAD_SD2_DATA2__GPIO6_IO_10	0x13069 /* WL_REG_ON */
-			>;
-		};
-	};
-};
-
-&uart3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_uart3
-		     &pinctrl_bt>;
-	fsl,uart-has-rtscts;
-	status = "okay";
-};
-
-&usdhc2 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_usdhc2_1>;
-	bus-width = <1>;
-};
-
 &vcc_sd3 {
 	regulator-always-on;
 };
 
-&usdhc3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_wifi>;
-	bus-width = <4>;
-	no-1-8-v;	/* force 3.3V VIO */
-	non-removable;
-	cd-post;
-	pm-ignore-notify;
-	wifi-host;	/* pull in card detect mechanism for BCMDHD driver */
-	status = "okay";
-};
+
diff --git a/arch/arm/boot/dts/imx6sx-sdb.dtsi b/arch/arm/boot/dts/imx6sx-sdb.dtsi
index 523dfdb..0e4be07 100644
--- a/arch/arm/boot/dts/imx6sx-sdb.dtsi
+++ b/arch/arm/boot/dts/imx6sx-sdb.dtsi
@@ -24,6 +24,18 @@
 		reg = <0x80000000 0x40000000>;
 	};
 
+	kim {
+            compatible = "kim";
+            nshutdown_gpio = <46>;  /* GPIO2_IO14 */
+            dev_name = "/dev/ttymxc2";
+            flow_cntrl = <1>;
+            baud_rate = <3000000>;
+    	};
+
+    	btwilink {
+            compatible = "btwilink";
+    	};
+
 	backlight1 {
 		compatible = "pwm-backlight";
 		pwms = <&pwm3 0 5000000>;
@@ -56,19 +68,21 @@
 			linux,code = <KEY_VOLUMEDOWN>;
 		};
 	};
-
+/*
 	hannstar_cabc {
 		compatible = "hannstar,cabc";
 		lvds0 {
 			gpios = <&gpio4 26 GPIO_ACTIVE_HIGH>;
 		};
 	};
-
+*/
         pxp_v4l2_out {
                 compatible = "fsl,imx6sx-pxp-v4l2", "fsl,imx6sl-pxp-v4l2";
                 status = "okay";
         };
 
+
+		
 	regulators {
 		compatible = "simple-bus";
 		#address-cells = <1>;
@@ -187,23 +201,34 @@
 			regulator-min-microvolt = <3300000>;
 			regulator-max-microvolt = <3300000>;
 		};
+		
+		wlan_reg: regulator@11 {
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_wlan_reg>;
+                	compatible = "regulator-fixed";
+                	regulator-name = "wlan-en-regulator";
+                	regulator-min-microvolt = <1800000>;
+                	regulator-max-microvolt = <1800000>;
+	                gpio = <&gpio2 3 0>;
+        	        startup-delay-us = <70000>;
+                	enable-active-high;
+			vin-supply = <&vgen4_reg>;	
+		};
 	};
 
 	sound {
-		compatible = "fsl,imx6sx-sdb-wm8962", "fsl,imx-audio-wm8962";
-		model = "wm8962-audio";
-		cpu-dai = <&ssi2>;
+		compatible = "fsl,imx6sx-sdb-sgtl5000", "fsl,imx-audio-sgtl5000";
+		model = "sgtl5000-audio";
+		ssi-controller = <&ssi2>;
 		audio-codec = <&codec>;
 		audio-routing =
-			"Headphone Jack", "HPOUTL",
-			"Headphone Jack", "HPOUTR",
-			"Ext Spk", "SPKOUTL",
-			"Ext Spk", "SPKOUTR",
-			"AMIC", "MICBIAS",
-			"IN3R", "AMIC";
+			"MIC_IN", "Mic Jack",
+                        "Mic Jack", "Mic Bias",
+                        "LINE_IN", "Line In Jack",
+                        "Headphone Jack", "HP_OUT",
+                        "Ext Spk", "LINE_OUT";
 		mux-int-port = <2>;
 		mux-ext-port = <6>;
-		codec-master;
 		hp-det-gpios = <&gpio1 17 1>;
 	};
 
@@ -310,14 +335,14 @@
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_flexcan1>;
 	xceiver-supply = <&reg_can_stby>;
-	status = "okay";
+	status = "disabled";
 };
 
 &flexcan2 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_flexcan2>;
 	xceiver-supply = <&reg_can_stby>;
-	status = "okay";
+	status = "disabled";
 };
 
 &i2c1 {
@@ -341,6 +366,7 @@
 
 			sw2_reg: sw2 {
 				regulator-min-microvolt = <800000>;
+                                regulator-name = "sw2_3v3";
 				regulator-max-microvolt = <3300000>;
 				regulator-boot-on;
 				regulator-always-on;
@@ -395,9 +421,14 @@
 			};
 
 			vgen4_reg: vgen4 {
+		//		compatible = "regulator-fixed";
+		//		regulator-name = "wlan-en-regulator";
 				regulator-min-microvolt = <1800000>;
 				regulator-max-microvolt = <3300000>;
 				regulator-always-on;
+			//	gpio = <&gpio2 3 0>;
+			//	startup-delay-us = <70000>;
+			//	enable-active-high;
 			};
 
 			vgen5_reg: vgen5 {
@@ -453,6 +484,14 @@
 	pinctrl-0 = <&pinctrl_i2c2>;
 	status = "okay";
 
+	codec: sgtl5000@0a {
+		compatible = "fsl,sgtl5000";
+		reg = <0x0a>;
+		clocks = <&clks IMX6SX_CLK_AUDIO>;
+		VDDA-supply = <&sw2_reg>;
+		VDDIO-supply = <&sw2_reg>;
+		VDDD-supply = <&vgen1_reg>;
+	};
 	egalax_ts@04 {
 		compatible = "eeti,egalax_ts";
 		reg = <0x04>;
@@ -468,7 +507,7 @@
 	clock-frequency = <100000>;
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_i2c3>;
-	status = "okay";
+	status = "disabled";
 
 	isl29023@44 {
 		compatible = "fsl,isl29023";
@@ -504,22 +543,40 @@
         pinctrl-0 = <&pinctrl_i2c4>;
         status = "okay";
 
-	codec: wm8962@1a {
-		compatible = "wlf,wm8962";
-		reg = <0x1a>;
-		clocks = <&clks IMX6SX_CLK_AUDIO>;
-		DCVDD-supply = <&vgen4_reg>;
-		DBVDD-supply = <&vgen4_reg>;
-		AVDD-supply = <&vgen4_reg>;
-		CPVDD-supply = <&vgen4_reg>;
-		MICVDD-supply = <&vgen3_reg>;
-		PLLVDD-supply = <&vgen4_reg>;
-		SPKVDD1-supply = <&reg_psu_5v>;
-		SPKVDD2-supply = <&reg_psu_5v>;
-		amic-mono;
+	si4703: si4703@0x10 {
+		#address-cells = <0x01>;
+		#size-cells = <0x00>;
+		reset-gpio = <&gpio1 17 GPIO_ACTIVE_HIGH>;
+		reg = <0x10>;
+		compatible = "si470x";
+		FM_VIO-supply = <&sw2_reg>;
+	};
+};
+
+&ecspi5 {
+        pinctrl-names = "default";
+        pinctrl-0 = <&pinctrl_ecspi5>;
+        status = "okay";
+
+	afe: afe4300@0 {
+		#address-cells = <0x1>;  
+                #size-cells = <0x0>;
+                spi-cpha;
+		compatible = "ti,afe4300";
+		ste-gpio = <&gpio4 28 GPIO_ACTIVE_HIGH>;
+		data_ready-gpio = <&gpio4 26 GPIO_ACTIVE_HIGH>;
+		reset-gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
+		spi-max-frequency = <1000000>;
+		reg = <0>;
+		interrupt-parent = <&gpio4>;
+		interrupts = <26 1>;
+		AVDD1-supply = <&sw2_reg>;
+		AVDD2-supply = <&sw2_reg>;
+		AVDD3-supply = <&sw2_reg>;		
 	};
 };
 
+
 &lcdif1 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_lcd>;
@@ -618,6 +675,29 @@
 	status = "okay";
 };
 
+&ecspi1 {
+        pinctrl-names = "default";
+        pinctrl-0 = <&pinctrl_ecspi1>;
+        status = "okay";
+
+	ads1292r: ads1292r@0 {
+		#address-cells = <0x1>;  
+                #size-cells = <0x0>;
+                spi-cpha;
+		compatible = "ti,ads1292r";
+		ste-gpio = <&gpio2 16 GPIO_ACTIVE_HIGH>;
+		reset-gpio = <&gpio2 18 GPIO_ACTIVE_HIGH>;
+		start-gpio = <&gpio2 17 GPIO_ACTIVE_HIGH>;
+		spi-max-frequency = <512000>;
+		reg = <0>;
+		interrupt-parent = <&gpio2>;
+		interrupts = <12 1>;
+		ADS_DVVD-supply = <&sw2_reg>;
+		ADS_AVVD-supply = <&sw2_reg>;
+	};
+};
+
+
 &ssi2 {
 	status = "okay";
 };
@@ -628,11 +708,19 @@
 	status = "okay";
 };
 
+&uart3 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_uart3>;
+    status = "okay";
+    /* enable rts/cts usage on uart3 */
+    fsl,uart-has-rtscts;   
+};
+
 &uart5 { /* for bluetooth */
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_uart5>;
 	fsl,uart-has-rtscts;
-	status = "okay";
+	status = "disabled";
 	/* for DTE mode, add below change */
 	/* fsl,dte-mode;*/
 	/* pinctrl-0 = <&pinctrl_uart5dte_1>; */
@@ -654,6 +742,28 @@
 	status = "okay";
 };
 
+
+&usdhc1 {
+        status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc1>;
+	non-removable;
+	no-1-8-v;
+	keep-power-in-suspend;
+	vmmc-supply = <&wlan_reg>;
+        cap-power-off-card;
+        #address-cells = <1>;
+        #size-cells = <0>;
+        
+	wlcore: wlcore@0 {
+        		compatible = "ti,wl1835";
+        		reg = <2>;
+        		interrupt-parent = <&gpio2>;
+        		interrupts = <2 0>;
+			platform-quirks = <1>;
+    	};       
+};
+
 &usdhc2 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_usdhc2>;
@@ -670,8 +780,8 @@
 	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
 	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
 	bus-width = <8>;
-	cd-gpios = <&gpio2 10 GPIO_ACTIVE_LOW>;
-	wp-gpios = <&gpio2 15 GPIO_ACTIVE_HIGH>;
+//	cd-gpios = <&gpio2 10 GPIO_ACTIVE_LOW>;
+//	wp-gpios = <&gpio2 15 GPIO_ACTIVE_HIGH>;
 	keep-power-in-suspend;
 	enable-sdio-wakeup;
 	vmmc-supply = <&vcc_sd3>;
@@ -699,9 +809,9 @@
 	imx6x-sdb {
 		pinctrl_hog: hoggrp {
 			fsl,pins = <
-				MX6SX_PAD_SD1_DATA0__GPIO6_IO_2 0x17059
-				MX6SX_PAD_SD1_DATA3__GPIO6_IO_5 0xb000
-				MX6SX_PAD_CSI_DATA03__GPIO1_IO_17 0x17059
+		//		MX6SX_PAD_SD1_DATA0__GPIO6_IO_2 0x17059
+		//		MX6SX_PAD_SD1_DATA3__GPIO6_IO_5 0xb000
+	//			MX6SX_PAD_CSI_DATA03__GPIO1_IO_17 0x17059
 			>;
 		};
 
@@ -751,8 +861,10 @@
 
 		pinctrl_enet1: enet1grp {
 			fsl,pins = <
-				MX6SX_PAD_ENET1_MDIO__ENET1_MDIO	0xa0b1
-				MX6SX_PAD_ENET1_MDC__ENET1_MDC		0xa0b1
+			//	MX6SX_PAD_ENET1_MDIO__ENET1_MDIO	0xa0b1
+		//		MX6SX_PAD_ENET1_MDC__GPIO2_IO_2     0x13059                      //wl irq
+		//		MX6SX_PAD_ENET1_MDIO__GPIO2_IO_3    0x13059                      //wl-en   
+			//	MX6SX_PAD_ENET1_MDC__ENET1_MDC		0xa0b1
 				MX6SX_PAD_RGMII1_TXC__ENET1_RGMII_TXC	0xa0b9
 				MX6SX_PAD_RGMII1_TD0__ENET1_TX_DATA_0	0xa0b1
 				MX6SX_PAD_RGMII1_TD1__ENET1_TX_DATA_1	0xa0b1
@@ -838,6 +950,19 @@
 			fsl,pins = <
 				MX6SX_PAD_CSI_DATA07__I2C4_SDA		0x4001b8b1
 				MX6SX_PAD_CSI_DATA06__I2C4_SCL		0x4001b8b1
+				MX6SX_PAD_CSI_DATA03__GPIO1_IO_17       0x4001b8b1
+				MX6SX_PAD_CSI_MCLK__CSI1_MCLK           0x4001b8b1  
+			>;
+		};
+		pinctrl_ecspi5: espi5grp {
+			fsl,pins = <
+				 MX6SX_PAD_QSPI1A_SS1_B__ECSPI5_MISO              0x100b1 
+                                MX6SX_PAD_QSPI1A_DQS__ECSPI5_MOSI                0x100b1                
+                                MX6SX_PAD_QSPI1B_DATA2__GPIO4_IO_26              0x100b1
+                                MX6SX_PAD_QSPI1B_SS1_B__ECSPI5_SCLK              0x100b1
+                                MX6SX_PAD_QSPI1B_DQS__GPIO4_IO_28                0x100b1  
+                                MX6SX_PAD_KEY_ROW4__GPIO2_IO_19                  0x100b1
+
 			>;
 		};
 
@@ -846,7 +971,7 @@
 				MX6SX_PAD_LCD1_DATA00__LCDIF1_DATA_0 0x4001b0b0
 				MX6SX_PAD_LCD1_DATA01__LCDIF1_DATA_1 0x4001b0b0
 				MX6SX_PAD_LCD1_DATA02__LCDIF1_DATA_2 0x4001b0b0
-				MX6SX_PAD_LCD1_DATA03__LCDIF1_DATA_3 0x4001b0b0
+		//		MX6SX_PAD_LCD1_DATA03__LCDIF1_DATA_3 0x4001b0b0
 				MX6SX_PAD_LCD1_DATA04__LCDIF1_DATA_4 0x4001b0b0
 				MX6SX_PAD_LCD1_DATA05__LCDIF1_DATA_5 0x4001b0b0
 				MX6SX_PAD_LCD1_DATA06__LCDIF1_DATA_6 0x4001b0b0
@@ -899,16 +1024,24 @@
 				MX6SX_PAD_QSPI1A_DATA0__GPIO4_IO_16	0x80000000
 			>;
 		};
+		
+		pinctrl_wlan_reg: wlan_reggrp {
+			fsl,pins = <
+	//			MX6SX_PAD_ENET1_MDC__GPIO2_IO_2     0x13059                      //wl irq
+				MX6SX_PAD_ENET1_MDIO__GPIO2_IO_3    0x13059                      //wl-en   
+		//		MX6SX_PAD_KEY_COL4__GPIO2_IO_14     0x13059                      //bt-en
+			>;
+		}; 
 
 		pinctrl_pwm3: pwm3grp-1 {
 			fsl,pins = <
-				MX6SX_PAD_SD1_DATA2__PWM3_OUT 0x110b0
+			//	MX6SX_PAD_SD1_DATA2__PWM3_OUT 0x110b0
 			>;
 		};
 
 		pinctrl_pwm4: pwm4grp-1 {
 			fsl,pins = <
-				MX6SX_PAD_SD1_DATA1__PWM4_OUT 0x110b0
+			//	MX6SX_PAD_SD1_DATA1__PWM4_OUT 0x110b0
 			>;
 		};
 
@@ -944,10 +1077,25 @@
 				MX6SX_PAD_SD4_DATA4__SPDIF_OUT          0x1b0b0
 			>;
 		};
+		
+		
+		pinctrl_ecspi1: ecspi1grp {
+			fsl,pins = <
+				   MX6SX_PAD_KEY_ROW1__GPIO2_IO_16      0x100b1  //chip select
+				   MX6SX_PAD_KEY_ROW2__GPIO2_IO_17      0x100b1  //start
+				   MX6SX_PAD_KEY_ROW0__ECSPI1_MOSI      0x100b1
+       				   MX6SX_PAD_KEY_COL0__ECSPI1_SCLK      0x100b1
+				   MX6SX_PAD_KEY_COL1__ECSPI1_MISO      0x100b1
+				   MX6SX_PAD_KEY_COL2__GPIO2_IO_12      0x100b1  //ready
+				   MX6SX_PAD_KEY_ROW3__GPIO2_IO_18      0x100b1  //reset
+				   MX6SX_PAD_KEY_COL3__GPIO2_IO_13      0x100b1  //clk                   
+                        
+			>;
+		};
 
 		pinctrl_vcc_sd3: vccsd3grp {
 			fsl,pins = <
-				MX6SX_PAD_KEY_COL1__GPIO2_IO_11		0x17059
+			//	MX6SX_PAD_KEY_COL1__GPIO2_IO_11		0x17059
 			>;
 		};
 
@@ -957,6 +1105,16 @@
 				MX6SX_PAD_GPIO1_IO05__UART1_RX		0x1b0b1
 			>;
 		};
+		
+		pinctrl_uart3: uart3grp {
+			fsl,pins = <
+				MX6SX_PAD_SD3_DATA7__UART3_CTS_B        0x1b0b1
+				MX6SX_PAD_SD3_DATA4__UART3_TX           0x1b0b1 
+			        MX6SX_PAD_SD3_DATA6__UART3_RTS_B        0x1b0b1
+				MX6SX_PAD_SD3_DATA5__UART3_RX           0x1b0b1                                 
+				MX6SX_PAD_KEY_COL4__GPIO2_IO_14         0x13059                      //bt-en
+			>;
+		};
 
 		pinctrl_uart5: uart5grp {
 			fsl,pins = <
@@ -993,6 +1151,19 @@
 				MX6SX_PAD_GPIO1_IO12__GPIO1_IO_12	0x10b0
 			>;
 		};
+		
+		pinctrl_usdhc1: usdhc1grp {
+			fsl,pins = <
+				MX6SX_PAD_SD1_CLK__USDHC1_CLK           0x10059                 
+				MX6SX_PAD_SD1_CMD__USDHC1_CMD           0x17059                 
+				MX6SX_PAD_SD1_DATA0__USDHC1_DATA0       0x17059                 
+				MX6SX_PAD_SD1_DATA1__USDHC1_DATA1       0x17059                 
+				MX6SX_PAD_SD1_DATA2__USDHC1_DATA2       0x17059                      
+				MX6SX_PAD_SD1_DATA3__USDHC1_DATA3       0x17059                 
+				MX6SX_PAD_ENET1_MDC__GPIO2_IO_2         0x13059                      //wl irq
+			//	MX6SX_PAD_ENET1_MDIO__GPIO2_IO_3        0x13059                      //wl-en   
+			>;
+		}; 
 
 		pinctrl_usdhc2: usdhc2grp {
 			fsl,pins = <
@@ -1007,48 +1178,48 @@
 
 		pinctrl_usdhc3: usdhc3grp {
 			fsl,pins = <
-				MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x17069
+			//	MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x17069
 				MX6SX_PAD_SD3_CLK__USDHC3_CLK		0x10071
-				MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x17069
-				MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x17069
-				MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x17069
-				MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x17069
-				MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x17069
-				MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x17069
-				MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x17069
-				MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x17069
-				MX6SX_PAD_KEY_COL0__GPIO2_IO_10		0x17059 /* CD */
-				MX6SX_PAD_KEY_ROW0__GPIO2_IO_15		0x17059 /* WP */
+			//	MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x17069
+			//	MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x17069
+			//	MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x17069
+			//	MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x17069
+			//	MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x17069
+			//	MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x17069
+			//	MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x17069
+			//	MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x17069
+			//	MX6SX_PAD_KEY_COL0__GPIO2_IO_10		0x17059 /* CD */
+			//	MX6SX_PAD_KEY_ROW0__GPIO2_IO_15		0x17059 /* WP */
 			>;
 		};
 
 		pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
 			fsl,pins = <
-				MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x170b9
+			//	MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x170b9
 				MX6SX_PAD_SD3_CLK__USDHC3_CLK		0x100b9
-				MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x170b9
-				MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x170b9
-				MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x170b9
-				MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x170b9
-				MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x170b9
-				MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x170b9
-				MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x170b9
-				MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x170b9
+			//	MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x170b9
+			//	MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x170b9
+			//	MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x170b9
+			//	MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x170b9
+			//	MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x170b9
+			//	MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x170b9
+			//	MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x170b9
+			//	MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x170b9
 			>;
 		};
 
 		pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
 			fsl,pins = <
-				MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x170f9
+			//	MX6SX_PAD_SD3_CMD__USDHC3_CMD		0x170f9
 				MX6SX_PAD_SD3_CLK__USDHC3_CLK		0x100f9
-				MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x170f9
-				MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x170f9
-				MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x170f9
-				MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x170f9
-				MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x170f9
-				MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x170f9
-				MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x170f9
-				MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x170f9
+			//	MX6SX_PAD_SD3_DATA0__USDHC3_DATA0	0x170f9
+			//	MX6SX_PAD_SD3_DATA1__USDHC3_DATA1	0x170f9
+			//	MX6SX_PAD_SD3_DATA2__USDHC3_DATA2	0x170f9
+			//	MX6SX_PAD_SD3_DATA3__USDHC3_DATA3	0x170f9
+			//	MX6SX_PAD_SD3_DATA4__USDHC3_DATA4	0x170f9
+			//	MX6SX_PAD_SD3_DATA5__USDHC3_DATA5	0x170f9
+			//	MX6SX_PAD_SD3_DATA6__USDHC3_DATA6	0x170f9
+			//	MX6SX_PAD_SD3_DATA7__USDHC3_DATA7	0x170f9
 			>;
 		};
 
diff --git a/arch/arm/boot/dts/imx6sx.dtsi b/arch/arm/boot/dts/imx6sx.dtsi
index 6929257..5cebfb9 100644
--- a/arch/arm/boot/dts/imx6sx.dtsi
+++ b/arch/arm/boot/dts/imx6sx.dtsi
@@ -320,6 +320,10 @@
 				};
 
 				ecspi1: ecspi@02008000 {
+					fsl,spi-num-chipselects = <1>;
+					cs-gpios = <0>;
+					spi-cpha;
+					clock-frequency = <512000>;
 					#address-cells = <1>;
 					#size-cells = <0>;
 					compatible = "fsl,imx6sx-ecspi", "fsl,imx51-ecspi";
@@ -1417,15 +1421,20 @@
 			};
 
 			ecspi5: ecspi@0228c000 {
-				#address-cells = <1>;
-				#size-cells = <0>;
-				compatible = "fsl,imx6sx-ecspi", "fsl,imx51-ecspi";
-				reg = <0x0228c000 0x4000>;
-				interrupts = <GIC_SPI 18 IRQ_TYPE_LEVEL_HIGH>;
-				clocks = <&clks IMX6SX_CLK_ECSPI5>,
-					 <&clks IMX6SX_CLK_ECSPI5>;
-				clock-names = "ipg", "per";
-				status = "disabled";
+				fsl,spi-num-chipselects = <1>;
+                                //cs-gpios = <&gpio4 28 0>; 
+                                cs-gpios = <0>;
+                                spi-cpha;
+                                #address-cells = <1>;
+                                #size-cells = <0>;
+                                compatible = "fsl,imx6sx-ecspi", "fsl,imx51-ecspi";
+                                reg = <0x0228c000 0x4000>;
+                                interrupts = <GIC_SPI 18 IRQ_TYPE_LEVEL_HIGH>;
+                                clocks = <&clks IMX6SX_CLK_ECSPI5>,
+                                         <&clks IMX6SX_CLK_ECSPI5>;
+                                clock-names = "ipg", "per";
+                                status = "okay";
+
 			};
 
 			sema4: sema4@02290000 { /* sema4 */
diff --git a/arch/arm/mach-imx/mach-imx6ul.c b/arch/arm/mach-imx/mach-imx6ul.c
index 034db69..25760bd 100644
--- a/arch/arm/mach-imx/mach-imx6ul.c
+++ b/arch/arm/mach-imx/mach-imx6ul.c
@@ -50,10 +50,22 @@ static int ksz8081_phy_fixup(struct phy_device *dev)
 	return 0;
 }
 
-#define PHY_ID_KSZ8081	0x00221560
+/*
+ * i.MX6UL EVK board RevA, RevB, RevC all use KSZ8081
+ * Silicon revision 00, the PHY ID is 0x00221560, pass our
+ * test with the phy fixup.
+ */
+#define PHY_ID_KSZ8081_MNRN60	0x00221560
+/*
+ * i.MX6UL EVK board RevC1 board use KSZ8081
+ * Silicon revision 01, the PHY ID is 0x00221561.
+ * This silicon revision still need the phy fixup setting.
+ */
+#define PHY_ID_KSZ8081_MNRN61	0x00221561
 static void __init imx6ul_enet_phy_init(void)
 {
-	phy_register_fixup_for_uid(PHY_ID_KSZ8081, 0xffffffff,	ksz8081_phy_fixup);
+	phy_register_fixup(PHY_ANY_ID, PHY_ID_KSZ8081_MNRN60, 0xffffffff, ksz8081_phy_fixup);
+	phy_register_fixup(PHY_ANY_ID, PHY_ID_KSZ8081_MNRN61, 0xffffffff, ksz8081_phy_fixup);
 }
 
 #define OCOTP_CFG3			0x440
diff --git a/drivers/bluetooth/btwilink.c b/drivers/bluetooth/btwilink.c
index 55c135b..aa8a4de 100644
--- a/drivers/bluetooth/btwilink.c
+++ b/drivers/bluetooth/btwilink.c
@@ -30,6 +30,7 @@
 
 #include <linux/ti_wilink_st.h>
 #include <linux/module.h>
+#include <linux/of.h>
 
 /* Bluetooth Driver Version */
 #define VERSION               "1.0"
@@ -286,6 +287,14 @@ static int ti_st_send_frame(struct hci_dev *hdev, struct sk_buff *skb)
 	return 0;
 }
 
+static const struct of_device_id btwilink_of_match[] = {
+{
+	.compatible = "btwilink",
+	},
+	{}
+};
+MODULE_DEVICE_TABLE(of, btwilink_of_match);
+
 static int bt_ti_probe(struct platform_device *pdev)
 {
 	static struct ti_st *hst;
@@ -349,6 +358,8 @@ static struct platform_driver btwilink_driver = {
 	.remove = bt_ti_remove,
 	.driver = {
 		.name = "btwilink",
+ 		.owner = THIS_MODULE,
+		.of_match_table = of_match_ptr(btwilink_of_match),
 	},
 };
 
diff --git a/drivers/iio/adc/Kconfig b/drivers/iio/adc/Kconfig
index 2302cd0..98b0924 100644
--- a/drivers/iio/adc/Kconfig
+++ b/drivers/iio/adc/Kconfig
@@ -6,10 +6,24 @@
 menu "Analog to digital converters"
 
 config AD_SIGMA_DELTA
-	tristate
+	tristate "ad_sigma_delta"
 	select IIO_BUFFER
 	select IIO_TRIGGERED_BUFFER
 
+config TI_AFE4300
+	tristate "ti,afe4300 driver"
+	depends on SPI
+	select AD_SIGMA_DELTA
+	help
+	  Say yes to support ti afe4300 driver.
+
+config TI_ADS1292R
+	tristate "ti,ads1292r driver"
+	depends on SPI
+	select AD_SIGMA_DELTA
+	help
+	  Say yes here to support ti ads1292r driver.
+
 config AD7266
 	tristate "Analog Devices AD7265/AD7266 ADC driver"
 	depends on SPI_MASTER
diff --git a/drivers/iio/adc/Makefile b/drivers/iio/adc/Makefile
index 834015b..86b8935 100644
--- a/drivers/iio/adc/Makefile
+++ b/drivers/iio/adc/Makefile
@@ -38,3 +38,5 @@ obj-$(CONFIG_VF610_ADC) += vf610_adc.o
 obj-$(CONFIG_VIPERBOARD_ADC) += viperboard_adc.o
 xilinx-xadc-y := xilinx-xadc-core.o xilinx-xadc-events.o
 obj-$(CONFIG_XILINX_XADC) += xilinx-xadc.o
+obj-$(CONFIG_TI_AFE4300) += afe4300.o
+obj-$(CONFIG_TI_ADS1292R) += ads1292r.o
diff --git a/drivers/iio/adc/ad_sigma_delta.c b/drivers/iio/adc/ad_sigma_delta.c
index d10bd0c..a4501cf 100644
--- a/drivers/iio/adc/ad_sigma_delta.c
+++ b/drivers/iio/adc/ad_sigma_delta.c
@@ -14,6 +14,7 @@
 #include <linux/spi/spi.h>
 #include <linux/err.h>
 #include <linux/module.h>
+#include <linux/delay.h> 
 
 #include <linux/iio/iio.h>
 #include <linux/iio/sysfs.h>
@@ -29,7 +30,7 @@
 #define AD_SD_COMM_CHAN_MASK	0x3
 
 #define AD_SD_REG_COMM		0x00
-#define AD_SD_REG_DATA		0x03
+#define AD_SD_REG_DATA		0x00
 
 /**
  * ad_sd_set_comm() - Set communications register
@@ -37,6 +38,7 @@
  * @sigma_delta: The sigma delta device
  * @comm: New value for the communications register
  */
+extern bool  conversion_complete; 
 void ad_sd_set_comm(struct ad_sigma_delta *sigma_delta, uint8_t comm)
 {
 	/* Some variants use the lower two bits of the communications register
@@ -67,8 +69,9 @@ int ad_sd_write_reg(struct ad_sigma_delta *sigma_delta, unsigned int reg,
 	struct spi_message m;
 	int ret;
 
-	data[0] = (reg << sigma_delta->info->addr_shift) | sigma_delta->comm;
+	data[0] = reg&0x1f;//(reg << sigma_delta->info->addr_shift) | sigma_delta->comm;
 
+	printk(KERN_ALERT "writing to the reg %d value %d size =%d   \n",reg,val,size);
 	switch (size) {
 	case 3:
 		data[1] = val >> 16;
@@ -119,16 +122,20 @@ static int ad_sd_read_reg_raw(struct ad_sigma_delta *sigma_delta,
 	spi_message_init(&m);
 
 	if (sigma_delta->info->has_registers) {
-		data[0] = reg << sigma_delta->info->addr_shift;
-		data[0] |= sigma_delta->info->read_mask;
+		//data[0] = reg << sigma_delta->info->addr_shift;
+		//data[0] |= sigma_delta->info->read_mask;
+		data[0] = reg&0x1f;
+                data[0] |= 0x20;
+                printk(KERN_ALERT " *****REG IS %d \n",data[0]);
 		spi_message_add_tail(&t[0], &m);
 	}
 	spi_message_add_tail(&t[1], &m);
-
+	printk(KERN_ALERT "****VALUE = %x %x \n",*val,val[1]);
 	if (sigma_delta->bus_locked)
 		ret = spi_sync_locked(sigma_delta->spi, &m);
 	else
 		ret = spi_sync(sigma_delta->spi, &m);
+	printk(KERN_ALERT "****VALUE = %x %x size = %x\n",*val,val[1],size);
 
 	return ret;
 }
@@ -196,7 +203,7 @@ static int ad_sd_calibrate(struct ad_sigma_delta *sigma_delta,
 
 	sigma_delta->irq_dis = false;
 	enable_irq(sigma_delta->spi->irq);
-	ret = wait_for_completion_timeout(&sigma_delta->completion, 2*HZ);
+	ret = wait_for_completion_timeout(&sigma_delta->completion, HZ);
 	if (ret == 0) {
 		sigma_delta->irq_dis = true;
 		disable_irq_nosync(sigma_delta->spi->irq);
@@ -262,11 +269,10 @@ int ad_sigma_delta_single_conversion(struct iio_dev *indio_dev,
 	reinit_completion(&sigma_delta->completion);
 
 	ad_sigma_delta_set_mode(sigma_delta, AD_SD_MODE_SINGLE);
-
 	sigma_delta->irq_dis = false;
 	enable_irq(sigma_delta->spi->irq);
 	ret = wait_for_completion_interruptible_timeout(
-			&sigma_delta->completion, HZ);
+			&sigma_delta->completion, 4*HZ);
 
 	sigma_delta->bus_locked = false;
 	spi_bus_unlock(sigma_delta->spi->master);
@@ -275,7 +281,6 @@ int ad_sigma_delta_single_conversion(struct iio_dev *indio_dev,
 		ret = -EIO;
 	if (ret < 0)
 		goto out;
-
 	ret = ad_sd_read_reg(sigma_delta, AD_SD_REG_DATA,
 		DIV_ROUND_UP(chan->scan_type.realbits + chan->scan_type.shift, 8),
 		&raw_sample);
@@ -364,8 +369,11 @@ static irqreturn_t ad_sd_trigger_handler(int irq, void *p)
 	struct ad_sigma_delta *sigma_delta = iio_device_get_drvdata(indio_dev);
 	unsigned int reg_size;
 	uint8_t data[16];
-	int ret;
+	char *var = "afe4300";
+	int ret;	
+	struct ads1292r_state *st = iio_priv(indio_dev);
 
+	if(!memcmp(var,indio_dev->name,8)) {
 	memset(data, 0x00, 16);
 
 	reg_size = indio_dev->channels[0].scan_type.realbits +
@@ -386,7 +394,12 @@ static irqreturn_t ad_sd_trigger_handler(int irq, void *p)
 			reg_size, &data[1]);
 		break;
 	}
-
+	}
+	else {
+		ads1292r_event_handler(irq,indio_dev);	
+		memset(data, 0x00, 16);
+		memcpy(data,st->data_buffer,9);
+        }
 	iio_push_to_buffers_with_timestamp(indio_dev, data, pf->timestamp);
 
 	iio_trigger_notify_done(indio_dev->trig);
@@ -406,12 +419,12 @@ static const struct iio_buffer_setup_ops ad_sd_buffer_setup_ops = {
 static irqreturn_t ad_sd_data_rdy_trig_poll(int irq, void *private)
 {
 	struct ad_sigma_delta *sigma_delta = private;
-
-	complete(&sigma_delta->completion);
+	printk(KERN_ALERT "\n irqued \n");
 	disable_irq_nosync(irq);
 	sigma_delta->irq_dis = true;
+	conversion_complete = true; 
+	complete(&sigma_delta->completion);
 	iio_trigger_poll(sigma_delta->trig);
-
 	return IRQ_HANDLED;
 }
 
@@ -442,7 +455,8 @@ static int ad_sd_probe_trigger(struct iio_dev *indio_dev)
 {
 	struct ad_sigma_delta *sigma_delta = iio_device_get_drvdata(indio_dev);
 	int ret;
-
+	
+	char *var = "afe4300";
 	sigma_delta->trig = iio_trigger_alloc("%s-dev%d", indio_dev->name,
 						indio_dev->id);
 	if (sigma_delta->trig == NULL) {
@@ -451,12 +465,21 @@ static int ad_sd_probe_trigger(struct iio_dev *indio_dev)
 	}
 	sigma_delta->trig->ops = &ad_sd_trigger_ops;
 	init_completion(&sigma_delta->completion);
-
-	ret = request_irq(sigma_delta->spi->irq,
+	
+	if(!memcmp(var,indio_dev->name,8)) {
+		ret = request_irq(sigma_delta->spi->irq,
+			  ad_sd_data_rdy_trig_poll,
+			  IRQF_TRIGGER_LOW ,
+			  indio_dev->name,
+			  sigma_delta);
+	}
+	else {
+		ret = request_irq(sigma_delta->spi->irq,
 			  ad_sd_data_rdy_trig_poll,
-			  IRQF_TRIGGER_LOW,
+			  IRQF_TRIGGER_FALLING | IRQF_ONESHOT,
 			  indio_dev->name,
 			  sigma_delta);
+	}
 	if (ret)
 		goto error_free_trig;
 
diff --git a/drivers/misc/ti-st/Kconfig b/drivers/misc/ti-st/Kconfig
index f34dcc5..f2df2c7 100644
--- a/drivers/misc/ti-st/Kconfig
+++ b/drivers/misc/ti-st/Kconfig
@@ -14,4 +14,12 @@ config TI_ST
 	  are returned to relevant protocol drivers based on their
 	  packet types.
 
+config ST_HCI
+	tristate "HCI TTY emulation driver for Bluetooth"
+	depends on TI_ST
+	help
+	  This enables the TTY device like emulation for HCI used by
+	  user-space Bluetooth stacks.
+	  It will provide a character device for user space Bluetooth stack to
+	  send/receive data over shared transport.
 endmenu
diff --git a/drivers/misc/ti-st/Makefile b/drivers/misc/ti-st/Makefile
index 78d7ebb..4546219 100644
--- a/drivers/misc/ti-st/Makefile
+++ b/drivers/misc/ti-st/Makefile
@@ -4,3 +4,4 @@
 #
 obj-$(CONFIG_TI_ST) 		+= st_drv.o
 st_drv-objs			:= st_core.o st_kim.o st_ll.o
+obj-$(CONFIG_ST_HCI)		+= tty_hci.o
diff --git a/drivers/misc/ti-st/st_kim.c b/drivers/misc/ti-st/st_kim.c
index 18e7a03..1393edb 100644
--- a/drivers/misc/ti-st/st_kim.c
+++ b/drivers/misc/ti-st/st_kim.c
@@ -840,6 +840,7 @@ static int kim_probe(struct platform_device *pdev)
 	kim_gdata->baud_rate = pdata->baud_rate;
 	pr_info("sysfs entries created\n");
 
+#ifdef CONFIG_DEBUG_FS
 	kim_debugfs_dir = debugfs_create_dir("ti-st", NULL);
 	if (!kim_debugfs_dir) {
 		pr_err(" debugfs entries creation failed ");
@@ -850,8 +851,8 @@ static int kim_probe(struct platform_device *pdev)
 				kim_gdata, &version_debugfs_fops);
 	debugfs_create_file("protocols", S_IRUGO, kim_debugfs_dir,
 				kim_gdata, &list_debugfs_fops);
+#endif
 	return 0;
-
 err_sysfs_group:
 	st_core_exit(kim_gdata->core_data);
 
diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index be86d92..e0893ee 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -1309,8 +1309,6 @@ int mmc_of_parse_voltage(struct device_node *np, u32 *mask)
 }
 EXPORT_SYMBOL(mmc_of_parse_voltage);
 
-#endif /* CONFIG_OF */
-
 static int mmc_of_get_func_num(struct device_node *node)
 {
 	u32 reg;
@@ -1339,6 +1337,10 @@ struct device_node *mmc_of_find_child_device(struct mmc_host *host,
 	return NULL;
 }
 
+#endif /* CONFIG_OF */
+
+
+
 #ifdef CONFIG_REGULATOR
 
 /**
diff --git a/drivers/mmc/host/sdhci-esdhc-imx.c b/drivers/mmc/host/sdhci-esdhc-imx.c
index a02edfc..c3b5588 100644
--- a/drivers/mmc/host/sdhci-esdhc-imx.c
+++ b/drivers/mmc/host/sdhci-esdhc-imx.c
@@ -692,6 +692,11 @@ static inline void esdhc_pltfm_set_clock(struct sdhci_host *host,
 	int pre_div = 2;
 	int div = 1;
 	u32 temp, val;
+	struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        
+       char *var2 = mmc_hostname(mmc);
 
 	if (clock == 0) {
 		host->mmc->actual_clock = 0;
@@ -711,7 +716,12 @@ static inline void esdhc_pltfm_set_clock(struct sdhci_host *host,
 	temp &= ~(ESDHC_CLOCK_IPGEN | ESDHC_CLOCK_HCKEN | ESDHC_CLOCK_PEREN
 		| ESDHC_CLOCK_MASK);
 	sdhci_writel(host, temp, ESDHC_SYSTEM_CONTROL);
-
+	if(!memcmp((char *)var,var2,5))
+        {
+                //pre_div = 32;
+                //div =3;
+               clock = 1000000;
+        }
 	if (imx_data->socdata->flags & ESDHC_FLAG_ERR010450) {
 		if (imx_data->is_ddr)
 			clock = clock > 45000000 ? 45000000 : clock;
@@ -1391,7 +1401,11 @@ static int sdhci_esdhc_runtime_suspend(struct device *dev)
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct pltfm_imx_data *imx_data = pltfm_host->priv;
 	int ret;
-
+        struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        if(memcmp((char *)var,var2,5)){
 	ret = sdhci_runtime_suspend_host(host);
 
 	if (!sdhci_sdio_irq_enabled(host)) {
@@ -1401,8 +1415,9 @@ static int sdhci_esdhc_runtime_suspend(struct device *dev)
 	clk_disable_unprepare(imx_data->clk_ahb);
 
 	release_bus_freq(BUS_FREQ_HIGH);
-
 	return ret;
+	}
+	return 0;
 }
 
 static int sdhci_esdhc_runtime_resume(struct device *dev)
@@ -1410,7 +1425,11 @@ static int sdhci_esdhc_runtime_resume(struct device *dev)
 	struct sdhci_host *host = dev_get_drvdata(dev);
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct pltfm_imx_data *imx_data = pltfm_host->priv;
-
+	struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        if(memcmp((char *)var,var2,5)){
 	request_bus_freq(BUS_FREQ_HIGH);
 
 	if (!sdhci_sdio_irq_enabled(host)) {
@@ -1420,6 +1439,8 @@ static int sdhci_esdhc_runtime_resume(struct device *dev)
 	clk_prepare_enable(imx_data->clk_ahb);
 
 	return sdhci_runtime_resume_host(host);
+        }
+	return 0;
 }
 #endif
 
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 04861ba..dcc5216 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -178,7 +178,10 @@ static void sdhci_disable_card_detection(struct sdhci_host *host)
 void sdhci_reset(struct sdhci_host *host, u8 mask)
 {
 	unsigned long timeout;
-
+        struct mmc_host *mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        if(memcmp((char *)var,var2,5)) {  
 	sdhci_writeb(host, mask, SDHCI_SOFTWARE_RESET);
 
 	if (mask & SDHCI_RESET_ALL) {
@@ -202,6 +205,7 @@ void sdhci_reset(struct sdhci_host *host, u8 mask)
 		timeout--;
 		mdelay(1);
 	}
+      }
 }
 EXPORT_SYMBOL_GPL(sdhci_reset);
 
@@ -228,7 +232,13 @@ static void sdhci_do_reset(struct sdhci_host *host, u8 mask)
 static void sdhci_set_ios(struct mmc_host *mmc, struct mmc_ios *ios);
 
 static void sdhci_init(struct sdhci_host *host, int soft)
-{
+{	
+	struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        if(memcmp((char *)var,var2,5)){
+
 	if (soft)
 		sdhci_do_reset(host, SDHCI_RESET_CMD|SDHCI_RESET_DATA);
 	else
@@ -251,6 +261,7 @@ static void sdhci_init(struct sdhci_host *host, int soft)
 		host->clock = 0;
 		sdhci_set_ios(host->mmc, &host->mmc->ios);
 	}
+        }
 }
 
 static void sdhci_reinit(struct sdhci_host *host)
@@ -1444,6 +1455,8 @@ static void sdhci_do_set_ios(struct sdhci_host *host, struct mmc_ios *ios)
 	unsigned long flags;
 	u8 ctrl;
 	struct mmc_host *mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
 
 	spin_lock_irqsave(&host->lock, flags);
 
@@ -1460,15 +1473,17 @@ static void sdhci_do_set_ios(struct sdhci_host *host, struct mmc_ios *ios)
 	 * Should clear out any weird states.
 	 */
 	if (ios->power_mode == MMC_POWER_OFF) {
-		sdhci_writel(host, 0, SDHCI_SIGNAL_ENABLE);
-		sdhci_reinit(host);
+		if(memcmp((char *)var,var2,5)) {
+			sdhci_writel(host, 0, SDHCI_SIGNAL_ENABLE);
+			sdhci_reinit(host);
+		}
 	}
 
 	if (host->version >= SDHCI_SPEC_300 &&
 		(ios->power_mode == MMC_POWER_UP) &&
 		!(host->quirks2 & SDHCI_QUIRK2_PRESET_VALUE_BROKEN))
 		sdhci_enable_preset_value(host, false);
-
+	if((memcmp((char *)var,var2,5)) || (ios->power_mode !=0)) {
 	if (!ios->clock || ios->clock != host->clock) {
 		host->ops->set_clock(host, ios->clock);
 		host->clock = ios->clock;
@@ -1485,6 +1500,7 @@ static void sdhci_do_set_ios(struct sdhci_host *host, struct mmc_ios *ios)
 			host->mmc->max_busy_timeout /= host->timeout_clk;
 		}
 	}
+        }
 
 	sdhci_set_power(host, ios->power_mode, ios->vdd);
 
@@ -2711,6 +2727,13 @@ static void sdhci_disable_irq_wakeups(struct sdhci_host *host)
 
 int sdhci_suspend_host(struct sdhci_host *host)
 {
+	struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        
+        if(memcmp((char *)var,var2,5)){
+
 	sdhci_disable_card_detection(host);
 
 	if (host->tuning_mode == SDHCI_TUNING_MODE_1) {
@@ -2727,6 +2750,7 @@ int sdhci_suspend_host(struct sdhci_host *host)
 		sdhci_enable_irq_wakeups(host);
 		enable_irq_wake(host->irq);
 	}
+	}
 	return 0;
 }
 
@@ -2734,6 +2758,12 @@ EXPORT_SYMBOL_GPL(sdhci_suspend_host);
 
 int sdhci_resume_host(struct sdhci_host *host)
 {
+	struct mmc_host *mmc;
+        mmc = host->mmc;
+        char *var = "mmc2";
+        char *var2 = mmc_hostname(mmc);
+        
+        if(memcmp((char *)var,var2,5)){
 	if (host->flags & (SDHCI_USE_SDMA | SDHCI_USE_ADMA)) {
 		if (host->ops->enable_dma)
 			host->ops->enable_dma(host);
@@ -2759,7 +2789,7 @@ int sdhci_resume_host(struct sdhci_host *host)
 	}
 
 	sdhci_enable_card_detection(host);
-
+	}
 	return 0;
 }
 
diff --git a/drivers/net/wireless/ti/wlcore/sdio.c b/drivers/net/wireless/ti/wlcore/sdio.c
index ea7e07a..f864cd6 100644
--- a/drivers/net/wireless/ti/wlcore/sdio.c
+++ b/drivers/net/wireless/ti/wlcore/sdio.c
@@ -271,7 +271,7 @@ static int wl1271_probe(struct sdio_func *func,
 	int ret = -ENOMEM;
 	int irq;
 	const char *chip_family;
-
+	printk(KERN_ALERT "**************** WL1271 PROBE \n");
 	/* We are only able to handle the wlan function */
 	if (func->num != 0x02)
 		return -ENODEV;
diff --git a/include/linux/iio/adc/ad_sigma_delta.h b/include/linux/iio/adc/ad_sigma_delta.h
index e7fdec4..5d5085d 100644
--- a/include/linux/iio/adc/ad_sigma_delta.h
+++ b/include/linux/iio/adc/ad_sigma_delta.h
@@ -78,6 +78,42 @@ struct ad_sigma_delta {
 	uint8_t				data[4] ____cacheline_aligned;
 };
 
+
+
+// ************************************************************************
+// these are the private structure to the ads1292 adc
+struct ads1292r_chip_info {
+        unsigned int id;
+        const struct iio_chan_spec *channels;
+        unsigned int num_channels;
+        unsigned int flags;
+
+        const struct iio_info *iio_info;
+        const u16 *sample_freq_avail;
+};
+
+struct ads1292r_state {
+        const struct ads1292r_chip_info *chip_info;
+        struct regulator                *reg;
+        u16                             int_vref_mv;
+        u16                             mode;
+        u16                             conf;
+        u32                             scale_avail[8][2];
+        u16                             freq_mode;
+        u16                             gain;
+        uint8_t                         data_buffer[9];
+        struct gpio_desc                *ste_gpio;
+        struct gpio_desc                *start_gpio;
+        struct gpio_desc                *data_ready;
+        struct gpio_desc                *reset_gpio;
+        struct ad_sigma_delta           sd;
+        int                             irq;
+
+};
+
+
+void ads1292r_event_handler(int irq, void *data);
+//***************************************************************************
 static inline int ad_sigma_delta_set_channel(struct ad_sigma_delta *sd,
 	unsigned int channel)
 {
diff --git a/sound/soc/codecs/wm8960.c b/sound/soc/codecs/wm8960.c
index 28eb426..e218041 100644
--- a/sound/soc/codecs/wm8960.c
+++ b/sound/soc/codecs/wm8960.c
@@ -814,6 +814,10 @@ static int wm8960_set_bias_level_out3(struct snd_soc_codec *codec,
 				}
 			}
 
+			ret = wm8960_configure_clocking(codec);
+			if (ret)
+				return ret;
+
 			/* Set VMID to 2x50k */
 			snd_soc_update_bits(codec, WM8960_POWER1, 0x180, 0x80);
 			break;
@@ -1020,11 +1024,6 @@ static bool is_pll_freq_available(unsigned int source, unsigned int target)
 	target *= 4;
 	Ndiv = target / source;
 
-	if (Ndiv < 6) {
-		source >>= 1;
-		Ndiv = target / source;
-	}
-
 	if ((Ndiv < 6) || (Ndiv > 12))
 		return false;
 
@@ -1135,6 +1134,9 @@ static int wm8960_set_dai_pll(struct snd_soc_dai *codec_dai, int pll_id,
 	if (pll_id == WM8960_SYSCLK_AUTO)
 		return 0;
 
+	if (is_pll_freq_available(freq_in, freq_out))
+		return -EINVAL;
+
 	return wm8960_set_pll(codec, freq_in, freq_out);
 }
 
